using System;
using Newtonsoft.Json.Linq;
using Snapper.Exceptions;

namespace Snapper.Json;

internal class JsonSnapshotSanitiser
{
    private readonly SnapshotSettings _snapshotSettings;

    public JsonSnapshotSanitiser(SnapshotSettings snapshotSettings)
    {
        _snapshotSettings = snapshotSettings;
    }

    public JObject SanitiseSnapshot(object snapshot)
    {
        try
        {
            if (snapshot is string stringSnapshot)
            {
                if (StringIsJsonObject(stringSnapshot))
                {
                    try
                    {
                        return JObjectHelper.ParseFromString(stringSnapshot, _snapshotSettings);
                    }
                    catch (Exception e)
                    {
                        throw new MalformedJsonSnapshotException(e);
                    }
                }
            }

            return JObjectHelper.FromObject(snapshot, _snapshotSettings);
        }
        catch (ArgumentException)
        {
            return JObjectHelper.FromObject(new { AutoGenerated = snapshot }, _snapshotSettings);
        }
    }

    private static bool StringIsJsonObject(string stringSnapshot)
    {
        var trimmedString = stringSnapshot.Trim();
        return trimmedString.StartsWith("{") && trimmedString.EndsWith("}");
    }
}
